{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogViewer/DialogList/DialogList.module.css","components/Dialogs/DialogViewer/NewMessageForm/NewMessageForm.module.css","components/Dialogs/DialogViewer/DialogList/DialogList.jsx","components/Dialogs/DialogViewer/NewMessageForm/NewMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectCompontent","this","props","to","React","connect","module","exports","DialogItem","id","activeClassName","cssDialogList","active","name","DialogList","className","dialogs_list","res","map","el","maxLength50","maxLengthCreator","NewMessageReduxForm","reduxForm","form","ccsNewMessage","send_message","onSubmit","handleSubmit","Field","value","newMessageText","component","Textarea","placeholder","validate","Required","send_message_control_panel","send_button","Dialog","addNewMessage","formData","sendMessage","cssDialogs","dialog","rod_name","messages","user_name","text","message","source","userType","time","send_time","Message","inner","outer","message_header","name_sender","time_sender","DialogHeader","dialog_header","Dialogs","Dialogs_wrapper","dialogs","dialog_list","updateNewMessageText","DialogsContainer","compose","dispatch","addMessageActionCreator"],"mappings":"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","file":"static/js/4.5e6bccc2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectCompontent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectCompontent)\r\n    return ConnectAuthRedirectComponent;\r\n   \r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialogs_dialog__cVLMr\",\"dialog_header\":\"Dialogs_dialog_header__2sUDE\",\"messages\":\"Dialogs_messages__3nFge\",\"message\":\"Dialogs_message__43LlP\",\"outer\":\"Dialogs_outer__KX4BB\",\"inner\":\"Dialogs_inner__2M7sc\",\"message_header\":\"Dialogs_message_header__3Ij9h\",\"name_sender\":\"Dialogs_name_sender__3gKT5\",\"time_sender\":\"Dialogs_time_sender__24VWs\",\"Dialogs_wrapper\":\"Dialogs_Dialogs_wrapper__3w4Lg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_list\":\"DialogList_dialogs_list__QCR5j\",\"active\":\"DialogList_active__7Xui4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"send_message\":\"NewMessageForm_send_message__6mCDy\",\"send_message_control_panel\":\"NewMessageForm_send_message_control_panel__10JZm\",\"send_button\":\"NewMessageForm_send_button__mXIsG\"};","import { NavLink } from 'react-router-dom';\r\nimport cssDialogList from './DialogList.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    return (        \r\n        <NavLink to={'/dialogs/' + props.id} activeClassName={cssDialogList.active}>{props.name}</NavLink>\r\n    )\r\n}\r\n\r\nconst DialogList = (props) => {\r\n    return (\r\n      <div className={cssDialogList.dialogs_list}>\r\n          {\r\n              props.res.map((el)=>(<DialogItem key={el.id} name={el.name} id={el.id}/>))\r\n          }          \r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default DialogList","import ccsNewMessage from './NewMessageForm.module.css';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {maxLengthCreator, Required} from '../../../../utils/validators/validators'\r\nimport { Textarea } from '../../../common/FormsControls/FormControls';\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst NewMessageForm = (props) => {\r\n  return (\r\n    <form className={ccsNewMessage.send_message} onSubmit={props.handleSubmit} >\r\n      <Field value={props.newMessageText} name=\"newMessageText\" component={Textarea} placeholder=\"text message\" validate={[Required,maxLength50]}/>\r\n      <div className={ccsNewMessage.send_message_control_panel}>\r\n      <button className={ccsNewMessage.send_button}>Отправить</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst NewMessageReduxForm = reduxForm({form: 'newMessage'})(NewMessageForm);\r\n\r\nexport default NewMessageReduxForm;","import cssDialogs from './Dialogs.module.css';\r\nimport DialogList from './DialogViewer/DialogList/DialogList';\r\nimport NewMessageForm from './DialogViewer/NewMessageForm/NewMessageForm';\r\nimport React from 'react';\r\nconst Dialogs = (props) => {\r\n  return (\r\n      <div className={cssDialogs.Dialogs_wrapper}>\r\n        <DialogList res={props.dialogs.dialog_list} />\r\n        <Dialog \r\n        rod_name=\"Михалковым\" \r\n        messages={props.dialogs.messages} \r\n        newMessageText={props.dialogs.newMessageText} \r\n        updateNewMessageText={props.updateNewMessageText}\r\n        sendMessage={props.sendMessage}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nclass Dialog extends React.Component {\r\n  addNewMessage = (formData) => {\r\n    this.props.sendMessage(formData.newMessageText);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={cssDialogs.dialog}>\r\n        <DialogHeader rod_name=\"Михалковым\"/>\r\n        <div className={cssDialogs.messages}>\r\n          {\r\n            this.props.messages.map((el)=>( <Message key={el.id} id={el.id} name={el.user_name} text = {el.message} source={((el.userType == 2)?'outer':'inner')} time={el.send_time}/>)\r\n            )\r\n          }\r\n        </div>\r\n        <NewMessageForm \r\n          onSubmit={this.addNewMessage}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n      <div className={cssDialogs.message + \" \" + ((props.source == 'inner')?cssDialogs.inner:cssDialogs.outer)}>\r\n        <div className={cssDialogs.message_header}>\r\n          <div className={cssDialogs.name_sender}>{props.name} </div>\r\n          <div className={cssDialogs.time_sender}>{props.time}</div>\r\n        </div>\r\n        \r\n        <div>{props.text}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\nconst DialogHeader = (props) => {\r\n   return (\r\n      <div className={cssDialogs.dialog_header}>Чат с {props.rod_name}</div>\r\n   )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Dialogs;","import { connect } from \"react-redux\";\r\nimport { addMessageActionCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'; \r\nimport { compose } from \"redux\";\r\nimport { Suspense } from \"react\";\r\n\r\n\r\n//state data\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogs: state.dialogs\r\n  }\r\n}\r\n//\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageText) => {\r\n      dispatch( addMessageActionCreator(newMessageText) )\r\n    }\r\n  }\r\n}\r\n\r\nconst DialogsContainer = compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n/* const SuspenceDialogsConatiner = () => {\r\n  return(\r\n    <Suspense fallback={<div>loading...</div>}>\r\n      <DialogsContainer/>\r\n    </Suspense>\r\n  )\r\n} */\r\n/* export default SuspenceDialogsConatiner; */\r\nexport default DialogsContainer;"],"sourceRoot":""}